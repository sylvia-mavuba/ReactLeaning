{"version":3,"sources":["webpack:///./src/js/app/app.js"],"names":["CounterDisplay","createClass","render","props","counterProp","Counter1","getInitialState","counter","toto","name","state","Counter2","handleIncrement","setState","handleDecrement","document","getElementById"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;AAiBA;;AAEA,IAAIA,iBAAiB,gBAAMC,WAAN,CAAkB;AAAA;AACpCC,UADoC,oBAC3B;AACL,eACI;AAAA;AAAA;AAAM,iBAAKC,KAAL,CAAWC;AAAjB,SADJ,CACwC;AACA;AAFxC;AAIH;AANmC,CAAlB,CAArB;;AASA;AACA,IAAIC,WAAW,gBAAMJ,WAAN,CAAkB;AAAA;;AAC7B;AACAK,qBAAiB,2BAAY;AACzB,eAAO;AACHC,qBAAS,CADN;AAEHC,kBAAM;AAFH,SAAP;AAIH,KAP4B;;AAS7BN,YAAQ,kBAAW;AACf;AAAC;AAAS;AACV,eACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,aADJ;AAEI;AAAA;AAAA;AAAK,qBAAKC,KAAL,CAAWM;AAAhB,aAFJ;AAGI,0CAAC,cAAD,IAAgB,aAAa,KAAKC,KAAL,CAAWF,IAAxC,GAHJ;AAAA;AAAA,SADJ;AAOH;AAlB4B,CAAlB,CAAf;;AAsBA;AACA,IAAIR,iBAAiB,gBAAMC,WAAN,CAAkB;AAAA;AAAA,CAAlB,CAArB;;AAIA,IAAIU,WAAW,gBAAMV,WAAN,CAAkB;AAAA;;AAC7BK,qBAAiB,2BAAY;AAAI;AAC7B,eAAO;AACHC,qBAAS;AADN,SAAP;AAGH,KAL4B;;AAO7BK,mBAP6B,6BAOX;AAAa;AAC3B,aAAKC,QAAL,CAAc,EAACN,SAAS,KAAKG,KAAL,CAAWH,OAAX,GAAqB,CAA/B,EAAd,EADc,CACmC;AACpD,KAT4B;AAW7BO,mBAX6B,6BAWX;AAAa;AAC3B,aAAKD,QAAL,CAAc,EAACN,SAAS,KAAKG,KAAL,CAAWH,OAAX,GAAqB,CAA/B,EAAd,EADc,CACmC;AACpD,KAb4B;AAe7BL,UAf6B,oBAepB;AACL,eACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAK,qBAAKO,IAAL,CAAUF;AAAf,aADJ;AAAA;AAGI,0CAAC,cAAD;AAHJ,SADJ;AAUH;AA1B4B,CAAlB,CAAf;AA6BA,mBAASL,MAAT,CACI,8BAAC,QAAD,IAAU,MAAM,cAAhB,GADJ,EACwC;AACpCa,SAASC,cAAT,CAAwB,gBAAxB,CAFJ,E","file":"app.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n/*\r\n//Exo 1\r\n\r\nclass Init extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <h1>Coucou {this.props.name}</h1>\r\n        )\r\n    }\r\n}\r\n\r\nReact.render(\r\n    <Init name=\"sylvia\"/>,\r\n    document.getElementById('main-container')\r\n);*/\r\n\r\n//Exo2\r\n\r\nvar CounterDisplay = React.createClass({\r\n   render() {\r\n       return(\r\n           <div>{this.props.counterProp}</div> // je peux récupérer de mon parent ma propriété à laquelle a été assigné son state \"counterProp={this.state.counter}\"\r\n                                               // la communication parent > enfant des composants se fait par les props\r\n       )\r\n   }\r\n})\r\n\r\n// The parent to child flow\r\nvar Counter1 = React.createClass({\r\n    //j'initialise l'état du composant = les différents states se trouvent au sein du composant\r\n    getInitialState: function () {\r\n        return {\r\n            counter: 0,\r\n            toto: 'caca'\r\n        }\r\n    },\r\n\r\n    render: function() {\r\n        {debugger}\r\n        return (\r\n            <div>\r\n                <h1>the parent to child flow</h1>\r\n                <h2>{this.props.name}</h2>\r\n                <CounterDisplay counterProp={this.state.toto} />  {/* ici j'ai décidé de faire passé le state du composant Count à la propriété du composant CounterDisplay */}\r\n            </div>\r\n        )\r\n    }\r\n});\r\n\r\n\r\n//The child to parent data flow\r\nvar CounterDisplay = React.createClass({\r\n        \r\n});\r\n\r\nvar Counter2 = React.createClass({\r\n    getInitialState: function () {   //voici l'état initiale de mon composant\r\n        return {\r\n            counter: 0\r\n        }\r\n    },\r\n\r\n    handleIncrement() {            // je veux faire évoluer mon composant donc je crée une fonction avec un état x (state) => fonction d'incrémentation\r\n        this.setState({counter: this.state.counter + 1}) //je l'appele \"counter\" comme mon état initiale (afin qu'il puisse l'écrasser)\r\n    },\r\n\r\n    handleDecrement() {            // fonction de décrémentation\r\n        this.setState({counter: this.state.counter - 1}) //je l'appele également \"counter\" comme mon état initiale (afin qu'il puisse l'écrasser)\r\n    },\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>{this.name.counter}</h2>    /* je récupére la props name de mon composant */\r\n                /* je veux créer une vue pour rendre mon compteur, donc je crée un composant enfant */\r\n                <CounterDisplay\r\n\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    });\r\nReactDOM.render(\r\n    <Counter1 name={'counter-main'} />, //le composant arrive avec ses propriétés\r\n    document.getElementById('main-container')\r\n);\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/app/app.js"],"sourceRoot":""}